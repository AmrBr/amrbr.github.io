---
import ArticleCard from "../../components/ui/ArticleCard.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Categories from "../../components/shared/Categories.astro";
import BaseHero from "../../components/shared/BaseHero.astro";
import Container from "../../components/ui/Container.astro";
import ContentList from "../../components/shared/ContentList.astro";

type Writing = CollectionEntry<"writing">;

const writing = await getCollection("writing", ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

const categories = [...new Set(writing.map((item: Writing) => item.data.category))] as string[];
const sortedWriting = writing.sort((a: Writing, b: Writing) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());
---

<BaseLayout title="Writing" description="My collection of papers, blogs, and notes">
  <Container>
    <BaseHero title="Writing" description="My collection of papers, blogs, and notes" />

    <Categories categories={categories} currentPath={Astro.url.pathname} basePath="writing" />

    <ContentList>
      {
        sortedWriting.map((item) => (
          <ArticleCard
            title={item.data.title}
            description={item.data.description}
            url={`/writing/${item.id}`}
            date={item.data.publishedAt}
            tags={item.data.tags}
          />
        ))
      }
    </ContentList>
  </Container>
</BaseLayout>
