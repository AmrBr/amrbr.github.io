---
import { getCollection, render } from "astro:content";
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../components/layout/BaseLayout.astro";

type Writing = CollectionEntry<"writing">;

export const getStaticPaths = (async () => {
  const writing = await getCollection("writing");
  return writing.map((item: Writing) => ({
    params: { slug: item.id },
    props: { item },
  }));
}) satisfies GetStaticPaths;

const { item }: { item: Writing } = Astro.props;
const { Content } = await render(item);

const formatDate = (date: Date) => {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<BaseLayout title={item.data.title} description={item.data.description}>
  <main>
    <article class="writing" dir={item.data.rtl? "rtl":"ltr"}>
      <header>
        <div class="metadata">
          <time datetime={item.data.publishedAt.toISOString()}>
            {formatDate(item.data.publishedAt)}
          </time>
        </div>
        <h1>{item.data.title}</h1>
      </header>
      <div class="content">
        <Content />
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  main {
    width: 100%;
    max-width: 640px;
    margin: 0 auto;
    padding: 2rem 1.5rem;
  }

  .writing {
    margin-top: 2rem;
  }

  header {
    margin-bottom: 2rem;
  }

  .metadata {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  time {
    color: var(--text-muted);
    font-size: var(--text-sm);
  }

  h1 {
    margin-top: 0.5rem;
  }

  .content {
    line-height: 1.7;
  }

  @media (max-width: 640px) {
    main {
      padding: 1rem;
    }
  }
</style>
